<div>
<h2>&#30446;&#24405;</h2>
<div>
<ul>
<li><a href="http://www.zmonster.me#orgheadline1" rel="noopener noreferrer" target="_blank">extern "C": &#25351;&#31034;&#32534;&#35793;&#22120;&#20197;C&#24418;&#24335;&#36827;&#34892;&#38142;&#25509;</a></li>
<li><a href="http://www.zmonster.me#orgheadline2" rel="noopener noreferrer" target="_blank">nm: &#26597;&#30475;&#30446;&#26631;&#25991;&#20214;&#20013;&#30340;&#31526;&#21495;&#26159;C&#24418;&#24335;&#36824;&#26159;C++&#24418;&#24335;</a></li>
<li><a href="http://www.zmonster.me#orgheadline3" rel="noopener noreferrer" target="_blank">"undefined reference": &#35809;&#24322;&#30340;&#38169;&#35823;</a></li>
</ul>
</div>
</div>

<div>
<h2>extern "C": &#25351;&#31034;&#32534;&#35793;&#22120;&#20197;C&#24418;&#24335;&#36827;&#34892;&#38142;&#25509;</h2>
<div>
<p>
&#26576;&#20123;&#26102;&#20505;&#65292;&#25105;&#20204;&#38656;&#35201;&#23558;&#19968;&#20123;C++&#30340;&#24211;&#23553;&#35013;&#25104;C&#39118;&#26684;&#30340;&#25509;&#21475;&#20379;&#22806;&#37096;&#20351;&#29992;&#65292;&#25152;&#35859;&ldquo;C&#39118;&#26684;&rdquo;&#30340;&#25509;&#21475;&#65292;&#26159;&#25351;&#35813;&#25509;&#21475;&#30340;&#21442;&#25968;&#12289;&#36820;&#22238;&#20540;&#20013;&#19981;&#21253;&#21547;&#31867;&#12289;&#20316;&#29992;&#22495;&#31561;C++&#30340;&#20803;&#32032;&#65292;&#20294;&#20854;&#23454;&#29616;&#20013;&#26159;&#21487;&#20197;&#26377;&#30340;&#12290;&#27604;&#22914;&#35828;&#65292;&#25105;&#20204;&#26377;&#19968;&#20010;&#31867; <b>Wav</b> &#65292;&#29992;&#26469;&#22788;&#29702;wave&#25991;&#20214;
</p>
<div>

<pre><span>#if</span><span>n</span><span>def</span> _WAV_H_
<span>#define</span> <span>_WAV_H_</span>

<span>class</span> <span>Wav</span>
{
<span>public</span>:
    <span>Wav</span>();
    <span>Wav</span>(<span>string</span> <span>wav_file</span>);
    <span>virtual</span> ~<span>Wav</span>();
    <span>bool</span> <span>load_wav</span>(<span>string</span> <span>wav_file</span>);
    <span>private</span>:
    <span>short</span> *<span>data</span>;
    <span>int</span> <span>sampel_rate</span>;
};

<span>#endif</span> <span>/* </span><span>_WAV_H_ */</span>
</pre>
</div>

<p>
&#28982;&#21518;&#25105;&#20204;&#38656;&#35201;&#21033;&#29992;&#36825;&#20010;&#31867;&#23454;&#29616;&#20960;&#20010;&#38899;&#39057;&#22788;&#29702;&#25509;&#21475;&#65292;&#25552;&#20379;&#32473; <b>C&#31243;&#24207;</b> &#20351;&#29992;&#65292;&#30001;&#20110;C&#35821;&#35328;&#20013;&#26159;&#27809;&#26377;&ldquo;&#31867;&rdquo;&#36825;&#20010;&#29305;&#24615;&#30340;&#65292;&#25105;&#20204;&#19981;&#33021;&#30452;&#25509;&#29992;C&#35821;&#35328;&#21435;&#23454;&#29616;&#36825;&#20123;&#25509;&#21475;&#65292;&#36825;&#20010;&#26102;&#20505;&#23601;&#35201;&#29992;&#21040;extern "C"&#20102;.
</p>
<div>

<pre><span>#if</span><span>n</span><span>def</span> _WAVPROC_H_
<span>#define</span> <span>_WAVPROC_H_</span>

<span>#ifdef</span> __cplusplus
<span>extern</span> <span>"C"</span>{
<span>#endif</span>
    <span>int</span> <span>read_wav</span>(<span>const</span> <span>char</span> *<span>wav_file</span>, <span>double</span> *<span>data</span>);
    <span>int</span> <span>denoise</span>(<span>double</span> *<span>data</span>);
    <span>int</span> <span>cutscene</span>(<span>double</span> *<span>data</span>);
    <span>int</span> <span>feature_extract</span>(<span>double</span> *<span>data</span>, <span>double</span> *<span>feature</span>);
<span>#ifdef</span> __cplusplus
}
<span>#endif</span>

<span>#endif</span> <span>/* </span><span>_WAVPROC_H_ </span><span>*/</span>
</pre>
</div>

<p>
&#28982;&#21518;&#22312;"wavproc.cpp"&#20013;&#23454;&#29616;&#36825;&#20123;&#25509;&#21475;&#65292;&#27492;&#26102;&#22312;"wavproc.cpp"&#20013;&#26159;&#21487;&#20197;&#20351;&#29992;&#19978;&#38754;&#23450;&#20041;&#30340;&#31867;&#20197;&#21450;&#20854;&#20182;C++&#35821;&#35328;&#30340;&#29305;&#24615;&#30340;&#12290;&#23454;&#29616;&#20197;&#21518;&#20197;&#38745;&#24577;&#24211;/&#21160;&#24577;&#24211;&#30340;&#24418;&#24335;&#25552;&#20379;&#25509;&#21475;&#65292;&#23545;&#20110;&#20351;&#29992;&#25509;&#21475;&#30340;C&#31243;&#24207;&#26469;&#35828;&#65292;&#21482;&#38656;&#35201;
</p>
<ol>
<li>wavproc.h</li>
<li>&#23545;&#24212;&#30340;&#38745;&#24577;&#24211;/&#21160;&#24577;&#24211;&#65292;&#22914;: libwavproc.a</li>
</ol>
</div>
</div>

<div>
<h2>nm: &#26597;&#30475;&#30446;&#26631;&#25991;&#20214;&#20013;&#30340;&#31526;&#21495;&#26159;C&#24418;&#24335;&#36824;&#26159;C++&#24418;&#24335;</h2>
<div>
<p>
nm&#26159;&#19968;&#20010;&#26597;&#30475;&#30446;&#26631;&#25991;&#20214;&#20013;&#31526;&#21495;&#21015;&#34920;&#30340;&#24037;&#20855;&#65292;&#20854;&#20855;&#20307;&#20351;&#29992;&#36825;&#37324;&#19981;&#20250;&#35814;&#35848;&#65292;&#21482;&#35762;&#19968;&#19979;&#29992;nm&#26469;&#21028;&#26029;&#20351;&#29992;extern "C"&#26159;&#21542;&#36215;&#20316;&#29992;&#12290;&#20030;&#20010;&#26647;&#23376;&#65292;&#23545;&#19979;&#38754;&#36825;&#20010;&#20989;&#25968;&#65306;
</p>
<div>

<pre><span>#include</span> <span>"fs.h"</span>

<span>int</span> <span>file_size</span>(<span>const</span> <span>char</span> *<span>file</span>)
{
    <span>int</span> <span>fs</span> = 0;
    <span>// </span><span>do something</span>
    <span>return</span> fs;
}
</pre>
</div>
<p>
&#20197;&#19978;&#20869;&#23481;&#22312;"fs.cpp"&#20013;&#65292;&#20854;&#23545;&#24212;&#30340;&#22836;&#25991;&#20214;&#20026;&#65306;
</p>
<div>

<pre><span>#if</span><span>n</span><span>def</span> _FS_H_
<span>#define</span> <span>_FS_H_</span>

<span>int</span> <span>file_size</span>(<span>const</span> <span>char</span> *<span>file</span>);

<span>#endif</span>
</pre>
</div>
<p>
&#29992;g++&#23558;"fs.cpp"&#32534;&#35793;&#25104;&#30446;&#26631;&#25991;&#20214;&#21518;&#65292;&#29992;nm&#26597;&#30475;&#20854;&#20013;&#30340;&#31526;&#21495;&#20449;&#24687;&#65306;
</p>
<div>

<pre>nm ~/test/cppcode/fs.o
</pre>
</div>

<p>
&#24471;&#21040;&#30340;&#36755;&#20986;&#26159;&#65306;
</p>
<pre>
0000000000000000 T _Z9file_sizePKc
</pre>

<p>
&#25105;&#20204;&#22312;"fs.c"&#20013;&#23454;&#29616;&#21516;&#26679;&#19968;&#20010;&#20989;&#25968;
</p>
<div>

<pre><span>#include</span> <span>"fs.h"</span>

<span>int</span> <span>file_size</span>(<span>const</span> <span>char</span> *<span>file</span>)
{
    <span>int</span> <span>fs</span> = 0;
    <span>/* </span><span>do something </span><span>*/</span>
    <span>return</span> fs;
}
</pre>
</div>
<p>
&#20854;&#23545;&#24212;&#30340;&#22836;&#25991;&#20214;&#19982;"fs.cpp"&#30340;&#22836;&#25991;&#20214;&#19968;&#26679;&#12290;&#28982;&#21518;&#29992;gcc&#23558;"fs.c"&#32534;&#35793;&#20026;&#30446;&#26631;&#25991;&#20214;&#21518;&#65292;&#21516;&#26679;&#29992;nm&#26597;&#30475;&#31526;&#21495;&#20449;&#24687;:
</p>
<div>

<pre>nm ~/test/ccode/fs.o
</pre>
</div>

<p>
&#24471;&#21040;&#32467;&#26524;&#20026;&#65306;
</p>
<pre>
0000000000000000 T file_size
</pre>

<p>
&#21487;&#20197;&#30475;&#21040;&#65292;&#21516;&#26679;&#19968;&#20010;&#20989;&#25968;&#65292;&#22312;C++&#31243;&#24207;&#21644;C&#31243;&#24207;&#20013;&#65292;&#34987;&#32534;&#35793;&#21518;&#20135;&#29983;&#30340;&#31526;&#21495;&#31867;&#22411;&#26159;&#19981;&#19968;&#26679;&#30340;&#12290;C++&#20026;&#20102;&#25903;&#25345;&#37325;&#36733;&#65292;&#22312;&#32534;&#35793;&#30340;&#26102;&#20505;&#20250;&#23545;&#20989;&#25968;&#31526;&#21495;&#28155;&#21152;&#21069;&#32512;&#21644;&#21518;&#32512;&#65292;&#21518;&#32512;&#26159;&#21442;&#25968;&#21015;&#34920;&#30340;&#32553;&#20889;&#65292;&#29992;&#26469;&#21306;&#20998;&#37325;&#36733;&#65307;&#32780;C&#32534;&#35793;&#22120;&#21017;&#19981;&#20250;&#23545;&#20989;&#25968;&#31526;&#21495;&#28155;&#21152;&#20854;&#20182;&#20449;&#24687;&#12290;
</p>

<p>
&#24403;&#25105;&#20204;&#38656;&#35201;&#23558;&#26576;&#20123;&#29992;C++&#23454;&#29616;&#30340;&#25509;&#21475;&#25552;&#20379;&#32473;C&#31243;&#24207;&#20351;&#29992;&#26102;&#65292;&#35201;&#22312;&#20854;&#22836;&#25991;&#20214;(&#25509;&#21475;&#23450;&#20041;)&#20013;&#29992;extern "C"&#26469;&#21578;&#35785;&#32534;&#35793;&#22120;&#65292;&#25353;C&#30340;&#24418;&#24335;&#23548;&#20986;&#31526;&#21495;&#34920;&mdash;&mdash;&#36825;&#20010;&#26159;&#20043;&#21069;&#25552;&#21040;&#36807;&#30340;&#65292;&#29616;&#22312;&#25105;&#20204;&#23545;"fs.cpp"&#30340;&#22836;&#25991;&#20214;"fs.h"&#36827;&#34892;&#36825;&#26679;&#30340;&#22788;&#29702;:
</p>
<div>

<pre><span>#if</span><span>n</span><span>def</span> _FS_H_
<span>#define</span> <span>_FS_H_</span>

<span>#ifdef</span> __cpulsplus
<span>extern</span> <span>"C"</span>{
<span>#endif</span>

    <span>int</span> <span>file_size</span>(<span>const</span> <span>char</span> *<span>file</span>);

<span>#ifdef</span> __cplusplus
}
<span>#endif</span>

<span>#endif</span>
</pre>
</div>
<p>
&#28982;&#21518;&#29992;g++&#23558;"fs.cpp"&#32534;&#35793;&#20026;&#30446;&#26631;&#25991;&#20214;&#65292;&#24182;&#20351;&#29992;nm&#26597;&#30475;&#31526;&#21495;&#20449;&#24687;&#65306;
</p>
<div>

<pre>nm ~/test/cppcode/fs.o
</pre>
</div>

<p>
&#24471;&#21040;&#30340;&#32467;&#26524;&#20026;&#65306;
</p>
<pre>
0000000000000000 T file_size
</pre>
<p>
&#21487;&#20197;&#30475;&#21040;&#65292;&#36825;&#27425;&#24471;&#21040;&#30340;&#31526;&#21495;&#31867;&#22411;&#26159;C&#24418;&#24335;&#30340;&#31526;&#21495;&#20102;&#65292;&#26159;&#21487;&#20197;&#34987;C&#31243;&#24207;&#25152;&#20351;&#29992;&#30340;&#12290;
</p>
</div>
</div>

<div>
<h2>"undefined reference": &#35809;&#24322;&#30340;&#38169;&#35823;</h2>
<div>
<p>
&#22909;&#20102;&#65292;&#32456;&#20110;&#21040;&#20102;&#26631;&#39064;&#25552;&#21040;&#30340;&#20869;&#23481;&#20102;&#12290;
</p>

<p>
&#20107;&#24773;&#26159;&#36825;&#26679;&#30340;&#65292;&#25105;&#36127;&#36131;&#30340;&#19968;&#20010;&#39033;&#30446;A&#26159;C++&#23454;&#29616;&#30340;&#65292;&#28982;&#21518;&#38656;&#35201;&#23558;&#20854;&#20013;&#30340;&#19968;&#20123;&#21151;&#33021;&#20197;&#25509;&#21475;&#30340;&#24418;&#24335;&#25552;&#20379;&#32473;&#21478;&#22806;&#19968;&#20010;&#39033;&#30446;B&#20351;&#29992;&mdash;&mdash;&#39033;&#30446;B&#26159;C&#23454;&#29616;&#30340;&#12290;&#37027;&#20040;&#65292;&#29702;&#25152;&#24403;&#28982;&#30340;&#65292;&#25105;&#20026;&#39033;&#30446;A&#32534;&#20889;API&#26102;&#65292;&#35201;&#29992;extern "C"&#21435;&#22788;&#29702;&#22836;&#25991;&#20214;&#12290;&#22312;&#23454;&#29616;&#22909;&#25509;&#21475;&#21518;&#65292;&#25105;&#20197;&#38745;&#24577;&#24211;&#30340;&#26041;&#24335;&#23558;&#25509;&#21475;&#25552;&#20379;&#32473;&#20102;&#39033;&#30446;B&#65292;&#28982;&#32780;&#22312;&#32534;&#35793;&#39033;&#30446;B&#26102;&#65292;&#24635;&#26159;&#25253;&#38169;&#65306;
</p>

<pre>
undeined reference: xxxx
</pre>

<p>
&#24847;&#21363;&#26377;&#19968;&#20010;&#20989;&#25968;&#26159;&#26410;&#23450;&#20041;&#30340;&#24341;&#29992;&#65292;&#32780;&#35813;&#20989;&#25968;&#26159;&#39033;&#30446;A&#30340;API&#20013;&#25552;&#20379;&#30340;&#25509;&#21475;&#20989;&#25968;&#20013;&#30340;&#19968;&#20010;&#12290;&#25105;&#25240;&#33150;&#20102;&#36817;&#19968;&#22825;&#26102;&#38388;&#65292;&#22987;&#32456;&#26080;&#27861;&#25214;&#21040;&#36825;&#20010;&#38382;&#39064;&#30340;&#21407;&#22240;&#25152;&#22312;&mdash;&mdash;&#36825;&#20010;&#26102;&#20505;&#25105;&#36824;&#19981;&#30693;&#36947;&#20351;&#29992;nm&#26469;&#36827;&#34892;&#26816;&#26597;&#30340;&#26041;&#27861;&#12290;&#26080;&#22856;&#20043;&#19979;&#21521;&#32769;&#22823;&#35831;&#25945;&#65292;&#32769;&#22823;&#36930;&#29992;nm&#26597;&#20102;&#19968;&#19979;&#25552;&#20379;&#30340;&#38745;&#24577;&#24211;&#65292;&#21457;&#29616;&#23548;&#20986;&#30340;&#31526;&#21495;&#36824;&#26159;C++&#24418;&#24335;&#30340;&#65292;&#20294;&#35809;&#24322;&#30340;&#26159;&#65292;&#21516;&#19968;&#20010;&#22836;&#25991;&#20214;&#20013;&#25552;&#20379;&#30340;&#33509;&#24178;&#20010;&#20989;&#25968;&#65292;&#21482;&#26377;&#36825;&#19968;&#20010;&#30340;&#31526;&#21495;&#36824;&#26159;C++&#24418;&#24335;&#30340;&#65292;&#32780;&#20854;&#20182;&#30340;&#37117;&#34987;&#23548;&#20986;&#25104;C&#24418;&#24335;&#30340;&#31526;&#21495;&#20102;&#12290;
</p>

<p>
&#32769;&#22823;&#20063;&#24456;&#36855;&#24785;&#65292;&#19981;&#36807;&#20182;&#35828;&#65306;&#20808;&#21035;&#24576;&#30097;&#32534;&#35793;&#22120;&#65292;&#24212;&#35813;&#36824;&#26159;&#26377;&#20160;&#20040;&#32454;&#33410;&#19978;&#22788;&#29702;&#19981;&#24403;&#12290;
</p>

<p>
&#26524;&#28982;&#65292;&#21518;&#26469;&#32463;&#36807;&#20960;&#30058;&#26816;&#26597;&#65292;&#21457;&#29616;&#26159;&#30001;&#20110;&#22836;&#25991;&#20214;&#20013;&#20989;&#25968;&#30340;&#21442;&#25968;&#31867;&#22411;&#21644;&#23454;&#29616;&#20013;&#20989;&#25968;&#30340;&#21442;&#25968;&#31867;&#22411;&#19981;&#19968;&#33268;&#23548;&#33268;&#20102;&#36825;&#20010;&#38382;&#39064;&#65292;&#22312;&#22836;&#25991;&#20214;&#20013;&#65292;&#35813;&#20989;&#25968;&#20026;&#65306;
</p>
<div>

<pre><span>void</span> <span>InitDiarizationSpace</span>(<span>Dia</span> *<span>env</span>, <span>const</span> <span>char</span> *<span>file</span>);
</pre>
</div>
<p>
&#32780;&#22312;&#23454;&#29616;&#20013;&#65292;&#35813;&#20989;&#25968;&#20026;&#65306;
</p>
<div>

<pre><span>void</span> <span>InitDiarizationSpace</span>(<span>Dia</span> *<span>env</span>, <span>char</span> *<span>file</span>) {
    <span>// </span><span>...</span>
}
</pre>
</div>

<p>
&hellip;&hellip;
</p>

<p>
&#23545;&#27492;&#25105;&#34920;&#31034;&#24456;&#32670;&#24871;&#12290;
</p>
</div>
</div>