<div>
<h2>&#30446;&#24405;</h2>
<div>
<ul>
<li><a href="http://www.zmonster.me#orgheadline1" rel="noopener noreferrer" target="_blank">Caffe &#31616;&#20171;</a></li>
<li><a href="http://www.zmonster.me#orgheadline2" rel="noopener noreferrer" target="_blank">Caffe &#30340;&#23433;&#35013;</a></li>
<li><a href="http://www.zmonster.me#orgheadline3" rel="noopener noreferrer" target="_blank">&#30456;&#20851;&#27010;&#24565;</a>
<ul>
<li><a href="http://www.zmonster.me#orgheadline4" rel="noopener noreferrer" target="_blank">Blob</a></li>
<li><a href="http://www.zmonster.me#orgheadline5" rel="noopener noreferrer" target="_blank">Layer</a></li>
<li><a href="http://www.zmonster.me#orgheadline6" rel="noopener noreferrer" target="_blank">Net</a></li>
</ul>
</li>
<li><a href="http://www.zmonster.me#orgheadline7" rel="noopener noreferrer" target="_blank">&#20351;&#29992; Caffe &#36827;&#34892;&#35757;&#32451;</a>
<ul>
<li><a href="http://www.zmonster.me#orgheadline8" rel="noopener noreferrer" target="_blank">&#35757;&#32451;&#21442;&#25968;&#35774;&#32622;</a></li>
<li><a href="http://www.zmonster.me#orgheadline9" rel="noopener noreferrer" target="_blank">&#32593;&#32476;&#32467;&#26500;&#23450;&#20041;</a></li>
<li><a href="http://www.zmonster.me#orgheadline10" rel="noopener noreferrer" target="_blank">&#25968;&#25454;&#20934;&#22791;</a></li>
<li><a href="http://www.zmonster.me#orgheadline11" rel="noopener noreferrer" target="_blank">&#35757;&#32451;&#19982;&#27979;&#35797;</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div>
<h2>Caffe &#31616;&#20171;</h2>
<div>
<p>
Caffe &#26159;&#19968;&#20010; C++ &#32534;&#20889;&#30340;&#28145;&#24230;&#23398;&#20064;&#26694;&#26550;&#65292;&#21407;&#26469;&#26159; UC Berkeley &#21338;&#22763;&#27605;&#19994;&#30340;&#36158;&#25196;&#28165;&#30340;&#20010;&#20154;&#39033;&#30446;&#65292;&#21518;&#26469;&#34987;&#20182;&#24320;&#28304;&#12290;&#30001;&#20110;&#20854;&#28165;&#26224;&#19982;&#39640;&#25928;&#32780;&#34987;&#24191;&#27867;&#20351;&#29992;&#65292;&#29992;&#25143;&#36880;&#28176;&#22320;&#20063;&#24418;&#25104;&#20102;&#19968;&#20010;&#24320;&#25918;&#30340;&#31038;&#21306;&#65292;&#21508;&#26041;&#30340;&#19968;&#20123;&#37325;&#35201;&#30340;&#30740;&#31350;&#25104;&#26524;(&#20027;&#35201;&#26159;&#21508;&#31181;&#27169;&#22411;)&#37117;&#34987;&#20998;&#20139;&#21040;&#31038;&#21306;&#20013;&#65292;&#36825;&#26159;&#38750;&#24120;&#26834;&#30340;&#19968;&#28857;&#12290;
</p>

<p>
Caffe &#30340;&#28165;&#26224;&#34920;&#29616;&#22312;&#32593;&#32476;&#32467;&#26500;&#19982;&#21442;&#25968;&#37117;&#29420;&#31435;&#20110;&#20195;&#30721;&#65292;&#29992;&#25143;&#21482;&#35201;&#20197;&#26222;&#36890;&#25991;&#26412;(&#20294;&#38656;&#36981;&#24490;&#19968;&#23450;&#30340;&#31616;&#21333;&#26684;&#24335;)&#23601;&#21487;&#20197;&#23450;&#20041;&#22909;&#33258;&#24049;&#30340;&#31070;&#32463;&#32593;&#32476;&#65292;&#24182;&#25353;&#33258;&#24049;&#30340;&#38656;&#35201;&#36827;&#34892;&#35843;&#25972;&#12290;&#32780;&#20854;&#39640;&#25928;&#20307;&#29616;&#22312;&#23545; CUDA &#30340;&#25903;&#25345;&#65292;GPU &#36816;&#31639;&#33021;&#26497;&#22823;&#22320;&#25552;&#39640;&#36816;&#31639;&#36895;&#24230;&#65292;&#21516;&#26102;&#25552;&#20379;&#20102;&#22312; CPU &#27169;&#24335;&#21644; GPU &#27169;&#24335;&#20043;&#38388;&#20999;&#25442;&#30340;&#31616;&#20415;&#26041;&#27861;&#12290;
</p>

<p>
&#21478;&#22806;&#65292;&#20195;&#30721;&#20063;&#20889;&#24471;&#24456;&#28418;&#20142;!
</p>
</div>
</div>

<div>
<h2>Caffe &#30340;&#23433;&#35013;</h2>
<div>
<p>
Caffe &#20381;&#36182;&#20197;&#19979;&#22806;&#37096;&#30340;&#24211;&#25110;&#32773;&#24037;&#20855;:
</p>
<ol>
<li><p>
<a href="http://www.nvidia.cn/object/cuda-cn.html" rel="noopener noreferrer" target="_blank">CUDA</a>: NVIDIA &#20844;&#21496;&#21457;&#24067;&#30340;&#24182;&#34892;&#35745;&#31639;&#26694;&#26550;&#65292;&#36890;&#36807;&#21033;&#29992; GPU &#30340;&#22788;&#29702;&#33021;&#21147;&#26469;&#22823;&#24133;&#25552;&#21319;&#35745;&#31639;&#24615;&#33021;&#12290;&#30001;&#20110;&#38656;&#35201;&#25968;&#25454;&#30340;&#37327;&#24456;&#22823;&#20197;&#21450; DNN &#26412;&#36523;&#30340;&#32467;&#26500;&#22797;&#26434;&#24615;&#65292;DNN &#30340;&#35757;&#32451;&#36807;&#31243;&#36890;&#24120;&#20250;&#38750;&#24120;&#38750;&#24120;&#24930;&#65292;&#22914;&#26524;&#33021;&#22815;&#21033;&#29992; CUDA &#33021;&#26497;&#22823;&#22320;&#25552;&#39640;&#25928;&#29575;&#12290;
</p>

<p>
&#26469;&#22359; TITAN &#21543;&#23569;&#24180;!
</p>


<div>
<p><img src="http://www.zmonster.me/assets/img/gtx690-1.jpg" alt="gtx690-1.jpg" referrerpolicy="no-referrer" loading="lazy">
</p>
</div>


<div>
<p><img src="http://www.zmonster.me/assets/img/gtx690-2.jpg" alt="gtx690-2.jpg" referrerpolicy="no-referrer" loading="lazy">
</p>
</div>


<div>
<p><img src="http://www.zmonster.me/assets/img/gtx690-3.jpg" alt="gtx690-3.jpg" referrerpolicy="no-referrer" loading="lazy">
</p>
</div></li>

<li><a href="http://www.netlib.org/blas/" rel="noopener noreferrer" target="_blank">BLAS</a>: &#34987;&#24191;&#27867;&#20351;&#29992;&#30340;&#32447;&#24615;&#20195;&#25968;&#24211;</li>
<li><a href="http://www.boost.org/" rel="noopener noreferrer" target="_blank">Boost</a>(&gt;=1.55): &#33879;&#21517;&#30340; C++ &#31532;&#19977;&#26041;&#24211;</li>
<li><a href="http://opencv.org/" rel="noopener noreferrer" target="_blank">OpenCV</a>(&gt;=2.4): &#33879;&#21517;&#30340;&#35745;&#31639;&#26426;&#35270;&#35273;&#24211;</li>
<li>Google &#24320;&#28304;&#30340;&#19968;&#22871;&#19996;&#35199;:

<ul>
<li>protobuf: &#25968;&#25454;&#24207;&#21015;&#21270;&#26694;&#26550;</li>
<li>gflags: &#21629;&#20196;&#34892;&#21442;&#25968;&#35299;&#26512;&#24211;</li>
<li>glog: &#26085;&#24535;&#35760;&#24405;&#26694;&#26550;</li>
</ul></li>

<li>IO &#30456;&#20851;&#30340;&#24211;

<ul>
<li>hdf5</li>
<li>leveldb</li>
<li>snappy</li>
<li>lmdb</li>
</ul></li>
</ol>

<p>
&#20197;&#19978;&#20381;&#36182;&#20013;&#21487;&#20197;&#20174;&#31995;&#32479;&#36719;&#20214;&#28304;&#23433;&#35013;&#30340;&#26377; 2, 5 &#20013;&#38500; glog &#22806;&#30340;&#20854;&#20182;&#20004;&#20010;, 6&#12290;&#22312; Debian &#19978;&#20351;&#29992;&#20197;&#19979;&#21629;&#20196;&#36827;&#34892;&#23433;&#35013;:
</p>
<div>

<pre>sudo apt-get install libatlas-dev libblas-dev libatlas-base-dev libatlas3-base  <span># </span><span>BLAS</span>
sudo apt-get install libprotobuf-dev protobuf-compiler libgflags-dev
sudo apt-get install libhdf5-dev libleveldb-dev libsnappy-dev liblmdb-dev
</pre>
</div>

<p>
Boost &#34429;&#28982;&#20063;&#33021;&#20174;&#36719;&#20214;&#28304;&#23433;&#35013;&#65292;&#20294;&#38656;&#35201;&#27880;&#24847;&#29256;&#26412;&#65292;&#22914;&#26524;&#29256;&#26412;&#36807;&#20302;&#36824;&#26159;&#38656;&#35201;&#36827;&#34892;&#32534;&#35793;&#23433;&#35013;&#12290;
</p>

<p>
glog &#20250;&#22312; Caffe &#23433;&#35013;&#30340;&#26102;&#20505;&#33258;&#21160;&#23433;&#35013;&#65292;&#25152;&#20197;&#38656;&#35201;&#25163;&#21160;&#23433;&#35013;&#30340;&#23601;&#21097;&#19979;:
</p>
<ol>
<li>CUDA</li>
<li>Boost</li>
<li>OpenCV</li>
</ol>

<p>
CUDA &#30340;&#23433;&#35013;&#31508;&#32773;&#27809;&#26377;&#32463;&#39564;&#65292;&#23601;&#19981;&#20316;&#23637;&#24320;&#20102;&#65292;&#21478;&#22806;&#20004;&#20010;&#36890;&#36807;&#28304;&#20195;&#30721;&#32534;&#35793;&#23433;&#35013;&#21363;&#21487;&#12290;OpenCV &#24314;&#35758;&#36873;&#25321;&#31283;&#23450;&#29256;&#26412; 2.4.10&#12290;
</p>

<p>
&#35299;&#20915;&#19978;&#36848;&#20381;&#36182;&#38382;&#39064;&#21518;&#36827;&#34892;&#32534;&#35793;&#23433;&#35013;&#21363;&#21487;&#12290;
</p>
<div>

<pre><span>cd</span> caffe &amp;&amp; mkdir build
<span>cd</span> build
cmake ..
make &amp;&amp; make install
</pre>
</div>

<p>
&#19978;&#36848;&#21629;&#20196;&#23558;&#20250;&#25226; Caffe &#23433;&#35013;&#21040; caffe/build/install &#30446;&#24405;&#19979;&#65292;&#22914;&#26524;&#38656;&#35201;&#23433;&#35013;&#22312;&#20854;&#20182;&#20301;&#32622;&#65292;&#21487;&#20197;&#22312;&#25191;&#34892; cmake &#26102;&#38468;&#21152;&#21442;&#25968; "CMAKE_INSTALL_PREFIX":
</p>
<div>

<pre>cmake -DCMAKE_INSTALL_PREFIX=/opt/caffe ../
</pre>
</div>

<p>
&#27880;&#24847; cmake &#36755;&#20986;&#20013;&#30340; "Install path" &#20197;&#30830;&#35748;&#26159;&#21542;&#29983;&#25928;&#12290;
</p>

<p>
&#22914;&#26524;&#26435;&#38480;&#20801;&#35768;&#65292;&#27604;&#36739;&#26041;&#20415;&#30340;&#26041;&#27861;&#26159;&#23433;&#35013;&#21040; /usr/local &#19979;&#38754;&#65292;&#36825;&#26679;&#30456;&#24212;&#30340;&#22836;&#25991;&#20214;&#12289;&#24211;&#25991;&#20214;&#37117;&#26159;&#22312;&#31995;&#32479;&#30340;&#26597;&#25214;&#36335;&#24452;&#20013;&#65292;&#22312;&#20351;&#29992; Caffe &#30340; API &#26102;&#23601;&#26080;&#38656;&#20877;&#21478;&#22806;&#25351;&#23450;&#22836;&#25991;&#20214;&#20301;&#32622;&#21644;&#38142;&#25509;&#21442;&#25968;&#12290;
</p>

<p>
&#27492;&#22806; Caffe &#36824;&#25552;&#20379;&#20102; Python &#30340;&#25509;&#21475;&#65292;&#22312;&#23433;&#35013;&#30446;&#24405;&#20013;&#26377;&#19968;&#20010; python &#30446;&#24405;&#65292;&#23558;&#20854;&#21152;&#20837;&#21040;&#29615;&#22659;&#21464;&#37327;&#20013;&#21363;&#21487;&#22312; Python &#39033;&#30446;&#20013;&#20351;&#29992;:
</p>
<div>

<pre><span>export</span> <span>PYTHONPATH</span>=/opt/caffe/python:$<span>PYTHONPATH</span>
</pre>
</div>

<p>
&#24403;&#28982;&#20102;&#65292;&#36825;&#20010; python &#25509;&#21475;&#20063;&#26377;&#19968;&#20123;&#20381;&#36182;&#38656;&#35201;&#23433;&#35013;&#65292;&#36825;&#20123;&#20381;&#36182;&#22312; python &#30446;&#24405;&#19979;&#30340; requirements.txt &#20013;&#35774;&#32622;&#65292;&#20351;&#29992; pip &#21363;&#21487;&#36827;&#34892;&#23433;&#35013;:
</p>
<div>

<pre>sudo pip install -r requirements.txt
</pre>
</div>

<p>
&#20854;&#20013;&#19968;&#20010;&#20381;&#36182; scipy &#38656;&#35201; fortran &#32534;&#35793;&#22120;:
</p>
<div>

<pre>sudo apt-get install gfortran
</pre>
</div>

<p>
&#33267;&#27492;&#23433;&#35013;&#32467;&#26463;&#65292;&#27492;&#26102;&#21487;&#29992;&#30340;&#36164;&#28304;&#26377;:
</p>
<ol>
<li>C++ &#24211;,&#21253;&#25324;&#22836;&#25991;&#20214;&#12289;&#21160;&#24577;&#38142;&#25509;&#24211;(&#25110;&#38745;&#24577;&#38142;&#25509;&#24211;)</li>
<li>Python &#25509;&#21475;</li>
<li>&#21629;&#20196;&#34892;&#24037;&#20855;&#65292;&#20301;&#20110;&#23433;&#35013;&#30446;&#24405;&#30340; bin/ &#30446;&#24405;&#19979;&#38754;</li>
</ol>
</div>
</div>

<div>
<h2>&#30456;&#20851;&#27010;&#24565;</h2>
<div>
</div><div>
<h3>Blob</h3>
<div>
<p>
Blob &#26159;&#29992;&#20110;&#23384;&#20648;&#25968;&#25454;&#30340;&#23545;&#35937;&#65292;&#22312; Caffe &#20013;&#21508;&#31181;&#25968;&#25454;(&#22270;&#20687;&#36755;&#20837;&#12289;&#27169;&#22411;&#21442;&#25968;)&#37117;&#26159;&#20197; Blob &#30340;&#24418;&#24335;&#22312;&#32593;&#32476;&#20013;&#20256;&#36755;&#30340;&#12290;&#21516;&#26102; Blob &#36824;&#33021;&#22312; CPU &#21644; GPU &#20043;&#38388;&#36827;&#34892;&#21516;&#27493;&#20197;&#25903;&#25345; CPU/GPU &#30340;&#28151;&#21512;&#36816;&#31639;&#12290;
</p>
</div>
</div>

<div>
<h3>Layer</h3>
<div>
<p>
Layer &#26159;&#32593;&#32476;&#30340;&#27425;&#32423;&#21333;&#20803;&#65292;&#20063;&#26159; Caffe &#20013;&#33021;&#22312;&#22806;&#37096;&#36827;&#34892;&#35843;&#25972;&#30340;&#26368;&#23567;&#32593;&#32476;&#32467;&#26500;&#21333;&#20803; &mdash;&mdash; &#19968;&#33324;&#26469;&#35828;&#65292;&#37117;&#35753;&#21516;&#19968;&#23618;&#30340;&#31070;&#32463;&#20803;&#20855;&#22791;&#30456;&#21516;&#30340;&#24615;&#36136;&#65292;&#22240;&#27492;&#20063;&#23601;&#27809;&#26377;&#24517;&#35201;&#25552;&#20379;&#23545;&#21333;&#20010;&#31070;&#32463;&#20803;&#30340;&#25805;&#20316;&#12290;
</p>

<p>
&#27599;&#20010; Layer &#37117;&#20250;&#26377;&#36755;&#20837;&#30340; Blob &#21644;&#36755;&#20986;&#30340; Blob&#12290;
</p>
</div>
</div>

<div>
<h3>Net</h3>
<div>
<p>
&#21363;&#19968;&#20010;&#23436;&#25972;&#30340;&#21253;&#21547;&#36755;&#20837;&#23618;&#12289;&#38544;&#34255;&#23618;&#12289;&#36755;&#20986;&#23618;&#30340;&#28145;&#24230;&#32593;&#32476;&#65292;&#22312; Caffe &#20013;&#19968;&#33324;&#26159;&#19968;&#20010;&#21367;&#31215;&#31070;&#32463;&#32593;&#32476;(Convolution Neural Networ, CNN)&#12290;
</p>

<p>
&#36890;&#36807;&#23450;&#20041;&#19981;&#21516;&#31867;&#22411;&#30340; Layer&#65292;&#24182;&#29992; Blob &#23558;&#19981;&#21516;&#30340; Layer &#36830;&#25509;&#36215;&#26469;&#65292;&#23601;&#33021;&#20135;&#29983;&#19968;&#20010; Net &#12290;
</p>
</div>
</div>
</div>

<div>
<h2>&#20351;&#29992; Caffe &#36827;&#34892;&#35757;&#32451;</h2>
<div>
<p>
&#36825;&#37324;&#20197; MNIST &#30340;&#20363;&#23376;&#26469;&#36827;&#34892;&#35828;&#26126;&#12290;
</p>
</div>

<div>
<h3>&#35757;&#32451;&#21442;&#25968;&#35774;&#32622;</h3>
<div>
<p>
&#35757;&#32451;&#21442;&#25968;&#36890;&#24120;&#35760;&#24405;&#21040;&#19968;&#20010;&#32479;&#19968;&#30340;&#25991;&#20214;&#20013;&#65292;&#20851;&#38190;&#21442;&#25968;&#26377;:
</p>
<ul>
<li><p>
&#35757;&#32451;(&#21450;&#27979;&#35797;)&#20351;&#29992;&#30340;&#32593;&#32476;
</p>

<p>
&#32593;&#32476;&#32467;&#26500;&#35201;&#22312;&#21478;&#22806;&#19968;&#20010;&#25991;&#20214;&#20013;&#23450;&#20041;&#65292;&#22312;&#37197;&#32622;&#25991;&#20214;&#20013;&#29992; "net" &#25351;&#23450;&#20854;&#20301;&#32622;&#65292;&#22914;:
</p>
<pre>
net: "examples/mnist/lenet_train_test.prototxt"
</pre></li>
<li><p>
&#23398;&#20064;&#29575;&#31561;&#32593;&#32476;&#36845;&#20195;&#21442;&#25968;
</p>

<p>
Caffe &#20013;&#30340;&#26435;&#20540;&#26356;&#26032;&#36890;&#36807;&#23398;&#20064;&#29575;&#21644;&#21160;&#37327;&#39033;&#26469;&#36827;&#34892;&#35745;&#31639;
</p>
<pre>
base_lr: 0.01        # &#21021;&#22987;&#23398;&#20064;&#29575;
momentum: 0.9        # &#21160;&#37327;&#39033;
</pre>

<p>
&#21516;&#26102;&#36824;&#26377; "lr_policy" &#31561;&#21442;&#25968;&#29992;&#20110;&#23398;&#20064;&#29575;&#30340;&#33258;&#36866;&#24212;&#20248;&#21270;:
</p>
<pre>
lr_policy: "inv"
gamma: 0.0001
power: 0.75
</pre>

<p>
&#27492;&#22806;&#36824;&#21487;&#20197;&#36890;&#36807; "weight_decay" &#26469;&#35774;&#32622;&#26435;&#37325;&#34928;&#20943;
</p>
<pre>
weight_decay: 0.0005
</pre></li>

<li><p>
&#35757;&#32451;&#36845;&#20195;&#27425;&#25968;
</p>

<p>
&#35774;&#32622;&#26368;&#22823;&#36845;&#20195;&#27425;&#25968;:
</p>
<pre>
max_iter: 10000
</pre></li>
<li><p>
&#35757;&#32451;&#27169;&#24335;(CPU/GPU)
</p>

<p>
&#22914;&#26524;&#31995;&#32479;&#23433;&#35013;&#20102; CUDA &#25903;&#25345; GPU &#36816;&#31639;&#65292;&#37027;&#20040; GPU &#27169;&#24335;&#26159;&#26356;&#22909;&#30340;&#36873;&#25321;&#65292;&#21542;&#21017;&#24212;&#24403;&#36873;&#25321; CPU &#27169;&#24335;:
</p>
<pre>
solver_mode: CPU
</pre></li>
</ul>

<p>
&#38500;&#20197;&#19978;&#21442;&#25968;&#22806;&#65292;&#36824;&#26377;&#29992;&#20110;&#27979;&#35797;&#30340;&#19968;&#20123;&#21442;&#25968;:
</p>
<ul>
<li>test_iter: &#27979;&#35797;&#27425;&#25968;</li>
<li>test_interval: &#20004;&#27425;&#27979;&#35797;&#20043;&#38388;&#30340;&#38388;&#38548;</li>
</ul>


<p>
&#22312; MNIST &#20363;&#23376;&#20013;&#65292;&#37197;&#32622;&#25991;&#20214;&#20026; examples/mnist/lenet_solver.prototxt&#65292;&#20854;&#20869;&#23481;&#20026;:
</p>
<pre>
# The train/test net protocol buffer definition
net: "examples/mnist/lenet_train_test.prototxt"

# test_iter specifies how many forward passes the test should carry out.
# In the case of MNIST, we have test batch size 100 and 100 test iterations,
# covering the full 10,000 testing images.
test_iter: 100

# Carry out testing every 500 training iterations.
test_interval: 500

# The base learning rate, momentum and the weight decay of the network.
base_lr: 0.01
momentum: 0.9
weight_decay: 0.0005

# The learning rate policy
lr_policy: "inv"
gamma: 0.0001
power: 0.75

# Display every 100 iterations
display: 100

# The maximum number of iterations
max_iter: 10000

# snapshot intermediate results
snapshot: 5000

snapshot_prefix: "examples/mnist/lenet"

# solver mode: CPU or GPU
solver_mode: GPU
</pre>
</div>
</div>

<div>
<h3>&#32593;&#32476;&#32467;&#26500;&#23450;&#20041;</h3>
<div>
<p>
&#22914;&#21069;&#25152;&#36848;&#65292;Net &#30001; Layer &#32452;&#25104;&#65292;&#27599;&#20010; Layer &#30340;&#23450;&#20041;&#37117;&#26159;&#20197;&#19979;&#24418;&#24335;:
</p>
<pre>
layer {
  name: "&lt;name&gt;"
  type: "&lt;type&gt;"
  bottom: "&lt;input blob&gt;"
  top: "&lt;output blob&gt;"
  transform_param {
    ...
  }
  &lt;prefix&gt;_param {
    ...
  }
}
</pre>

<p>
&#21487;&#29992;&#30340; Layer &#31867;&#22411;&#21450;&#20854;&#21442;&#25968;&#35265; <a href="http://caffe.berkeleyvision.org/tutorial/layers.html" rel="noopener noreferrer" target="_blank">Caffe|Layer catalogue</a> &#12290;
</p>

<p>
&#23618;&#19982;&#23618;&#36890;&#36807;&#36755;&#20837;&#21644;&#36755;&#20986;&#32852;&#31995;&#22312;&#19968;&#36215;&#65292;&#27604;&#22914;&#35828;&#23450;&#20041;&#19968;&#20010;&#20004;&#23618;&#30340;&#21069;&#39304;&#32593;&#32476;&#65292;&#21487;&#20197;&#36825;&#26679;:
</p>
<pre>
layer {
  name: "input"
  type: "Data"
  top: "data"
}
layer {
  name: "output"
  type: "SoftmaxWithLoss"
  bottom: "data"
  top: "loss"
}
</pre>
<p>
"input" &#23618;&#30340;&#36755;&#20986; Blob &#26159; "data" &#65292;&#21516;&#26102; "data" &#36825;&#20010; Blob &#21448;&#26159; "output" &#23618;&#30340;&#36755;&#20986;&#65292;&#36825;&#20004;&#20010;&#23618;&#23601;&#36825;&#26679;&#34987;&#36830;&#25509;&#36215;&#26469;&#20102;&#12290;
</p>

<p>
&#22312; MNIST &#20363;&#23376;&#20013;&#65292;&#32593;&#32476;&#32467;&#26500;&#23450;&#20110;&#20110; examples/mnist/lenet_train_test.prototxt &#20013;&#65292;&#30001;&#20110;&#20854;&#20869;&#23481;&#36739;&#38271;&#65292;&#36825;&#37324;&#23601;&#19981;&#35814;&#32454;&#20889;&#20986;&#26469;&#20102;&#65292;&#20165;&#20197;&#22270;&#31034;&#20043;&#12290;
</p>

<p>
TODO: &#22270;
</p>
</div>
</div>

<div>
<h3>&#25968;&#25454;&#20934;&#22791;</h3>
<div>
<p>
&#22312; MNIST &#30340;&#20363;&#23376;&#20013;&#65292;&#38656;&#35201;&#23558; MNIST &#25968;&#25454;&#38598;&#36716;&#25442;&#20026; lmdb &#26684;&#24335;&#12290;&#20808;&#26469;&#30475;&#30475; MNIST &#25968;&#25454;&#38598;&#30340;&#22788;&#29702;&#20877;&#35848;&#19968;&#19979;&#26222;&#36890;&#30340;&#25968;&#25454;&#22914;&#20309;&#36716;&#25442;&#25104;&#21487;&#29992;&#20110;&#35757;&#32451;&#30340;&#25968;&#25454;&#12290;
</p>

<p>
&#39318;&#20808;&#35201;&#33719;&#21462;&#25968;&#25454;&#65292;&#36825;&#37117;&#24050;&#32463;&#22312; Caffe &#30340;&#28304;&#20195;&#30721;&#21253;&#20013;&#25552;&#20379;&#20102;&#30456;&#24212;&#30340;&#24037;&#20855;:
</p>
<ul>
<li>data/mnist/get_mnist.sh</li>
<li>examples/mnist/create_mnist.sh</li>
</ul>

<p>
&#31532;&#19968;&#20010;&#33050;&#26412;&#29992;&#20110;&#19979;&#36733; MNIST &#25968;&#25454;&#38598;&#65292;&#38405;&#35835;&#19968;&#19979;&#33050;&#26412;&#20869;&#23481;&#65292;&#21457;&#29616;&#19981;&#36807;&#23601;&#26159;&#20960;&#26465; wget &#21629;&#20196;&#32780;&#24050;:
</p>
<div>

<pre>wget http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
wget --no-check-certificate http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz
wget --no-check-certificate http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz
wget --no-check-certificate http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz
</pre>
</div>

<p>
&#31532;&#20108;&#20010;&#33050;&#26412;&#29992;&#20110;&#23558;&#19979;&#36733;&#30340; MNIST &#25968;&#25454;&#38598;&#36716;&#25442;&#20026; lmdb &#25991;&#20214;&#65292;&#33050;&#26412;&#20869;&#23481;&#22914;&#19979;&#65292;&#20063;&#26159;&#27604;&#36739;&#31616;&#21333;&#12290;
</p>
<div>

<pre><span>EXAMPLE</span>=examples/mnist
<span>DATA</span>=data/mnist
<span>BUILD</span>=build/examples/mnist

<span>BACKEND</span>=<span>"lmdb"</span>

<span>echo</span> <span>"Creating ${BACKEND}..."</span>

rm -rf $<span>EXAMPLE</span>/mnist_train_${<span>BACKEND</span>}
rm -rf $<span>EXAMPLE</span>/mnist_test_${<span>BACKEND</span>}

$<span>BUILD</span>/convert_mnist_data.bin $<span>DATA</span>/train-images-idx3-ubyte <span>\</span>
                              $<span>DATA</span>/train-labels-idx1-ubyte $<span>EXAMPLE</span>/mnist_train_${<span>BACKEND</span>} --backend=${<span>BACKEND</span>}
$<span>BUILD</span>/convert_mnist_data.bin $<span>DATA</span>/t10k-images-idx3-ubyte <span>\</span>
                              $<span>DATA</span>/t10k-labels-idx1-ubyte $<span>EXAMPLE</span>/mnist_test_${<span>BACKEND</span>} --backend=${<span>BACKEND</span>}

<span>echo</span> <span>"Done."</span>
</pre>
</div>

<p>
&#23545;&#20110;&#25105;&#20204;&#33258;&#24049;&#30340;&#25968;&#25454;&#65292;&#19968;&#33324;&#26469;&#35828;&#26159;&#19968;&#22534;&#22270;&#29255;&#65292;Caffe &#20063;&#25552;&#20379;&#20102; <b>convert_imageset</b> &#36825;&#20010;&#24037;&#20855;&#65292;&#36825;&#26159;&#23433;&#35013; Caffe &#21518;&#25552;&#20379;&#30340;&#21629;&#20196;&#34892;&#24037;&#20855;&#20043;&#19968;&#12290;&#35813;&#21629;&#20196;&#30340;&#20351;&#29992;&#26041;&#24335;&#20026;:
</p>
<pre>
convert_imageset [FLAGS] ROOTFOLDER/ LISTFILE DB_NAME
</pre>
<p>
&#20854;&#20013; LISTFILE &#27599;&#34892;&#35760;&#24405;&#19968;&#24352;&#22270;&#29255;&#30340;(&#30456;&#23545;)&#36335;&#24452;&#21450;&#31867;&#21035;&#65292;&#22914;:
</p>
<pre>
pics/0_1.png 0
</pre>
<p>
&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#36825;&#37324;&#30340; "&#31867;&#21035;" <b>&#24517;&#39035;&#26159;&#19968;&#20010;&#25972;&#25968;</b> &#12290;ROOTFOLDER &#21644; LISTFILE &#20013;&#22270;&#29255;&#30340;&#36335;&#24452;&#26500;&#25104;&#22270;&#29255;&#30340;&#30495;&#23454;&#36335;&#24452;&#65292;DB_NAME &#26159;&#35201;&#21019;&#24314;&#30340; lmdb &#25991;&#20214;&#30340;&#21517;&#31216;&#12290;
</p>

<p>
&#22914;&#26524;&#22270;&#29255;&#38598;&#20013;&#23384;&#22312;&#22270;&#29255;&#22823;&#23567;&#19981;&#19968;&#33268;&#30340;&#24773;&#20917;&#65292;&#21487;&#20197;&#29992; -resize_height &#21644; -resize_width &#26469;&#23558;&#25152;&#26377;&#22270;&#29255;&#35268;&#25972;&#25104;&#32479;&#19968;&#30340;&#23610;&#23544;&#12290;
</p>

<div>

<pre>convert_imageset -resize_height 64 -resize_width 64 ./ pic_label.list mydb
</pre>
</div>
</div>
</div>

<div>
<h3>&#35757;&#32451;&#19982;&#27979;&#35797;</h3>
<div>
<p>
&#22312;&#20197;&#19978;&#27493;&#39588;&#37117;&#23436;&#25104;&#21518;&#21363;&#21487;&#24320;&#22987;&#36827;&#34892;&#35757;&#32451;&#19982;&#27979;&#35797;&#65292;&#20351;&#29992;&#21629;&#20196;&#34892;&#24037;&#20855;&#20013;&#30340; caffe &#21629;&#20196;&#21363;&#21487;:
</p>

<div>

<pre>caffe train --solver=lenet_train_test.prototxt
</pre>
</div>

<p>
&#22312;&#35757;&#32451;&#36807;&#31243;&#20013;&#20250;&#35266;&#23519;&#21040;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#36755;&#20986;:
</p>
<pre>
I1203 solver.cpp:204] Iteration 100, lr = 0.00992565
I1203 solver.cpp:66] Iteration 100, loss = 0.26044
...
I1203 solver.cpp:84] Testing net
I1203 solver.cpp:111] Test score #0: 0.9785
I1203 solver.cpp:111] Test score #1: 0.0606671
</pre>

<p>
&#36825;&#20123;&#36755;&#20986;&#34920;&#26126;&#20102;&#23398;&#20064;&#29575;&#12289;loss &#21644;&#27979;&#35797;&#25968;&#25454;&#22312;&#24403;&#21069;&#32593;&#32476;&#19978;&#30340;&#34920;&#29616;&#65292;&#36825;&#20123;&#36755;&#20986;&#37117;&#26159;&#38656;&#35201;&#27880;&#24847;&#30340;&#12290;&#20030;&#20010;&#26647;&#23376;
</p>


<div>
<p><img src="http://www.zmonster.me/assets/img/chesnut.jpg" alt="chesnut.jpg" referrerpolicy="no-referrer" loading="lazy">
</p>
</div>

<p>
&#22914;&#26524;&#22312;&#24320;&#22987;&#26102;&#23398;&#20064;&#29575;&#35774;&#32622;&#36807;&#22823;&#65292;&#23548;&#33268;&#35757;&#32451;&#36807;&#31243;&#19981;&#25910;&#25947;&#20102;&#65292;&#26159;&#33021;&#22815;&#36890;&#36807;&#35266;&#23519; loss &#21644; &#27979;&#35797;&#25968;&#25454;&#22312;&#24403;&#21069;&#32593;&#32476;&#19978;&#30340;&#34920;&#29616;&#21028;&#26029;&#20986;&#26469;&#30340;&#12290;
</p>

<p>
&#22312; MNIST &#30340;&#20363;&#23376;&#20013;&#65292;&#26368;&#21518;&#35757;&#32451;&#29983;&#25104;&#30340;&#27169;&#22411;&#26159;: examples/mnist/lenet_iter_10000.caffemodel&#12290;&#36825;&#20010;&#27169;&#22411;&#21487;&#20197;&#22312;&#20043;&#21518;&#30340;&#20998;&#31867;&#20013;&#20351;&#29992;&#12290;
</p>
</div>
</div>
</div>